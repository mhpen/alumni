# Stage 1: Build the React frontend
FROM node:16-alpine AS frontend-builder
WORKDIR /app
COPY client/package*.json ./
RUN npm install
COPY client/ ./
RUN npm run build

# Stage 2: Build the Python backend
FROM python:3.9-slim AS backend-builder
WORKDIR /app
COPY server/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt
COPY server/ .

# Stage 3: Final image with Nginx
FROM nginx:alpine
WORKDIR /app

# Install Python
RUN apk add --no-cache python3 py3-pip

# Copy Python requirements and install dependencies
COPY --from=backend-builder /app/requirements.txt .
RUN pip3 install --no-cache-dir -r requirements.txt

# Copy server code
COPY --from=backend-builder /app /app

# Copy built React app to Nginx serve directory
COPY --from=frontend-builder /app/build /usr/share/nginx/html

# Configure Nginx
COPY client/nginx.conf /etc/nginx/conf.d/default.conf

# Create .env file with environment variables
RUN echo "MONGODB_URI=mongodb+srv://dsilva:7DaXRzRoueTBa3a5@alumnimanagement.f10hpn9.mongodb.net/?retryWrites=true&w=majority&appName=AlumniManagement\n\
DATABASE_NAME=alumni_management\n\
JWT_SECRET_KEY=your_super_secret_key_for_jwt_tokens\n\
" > /app/.env

# Create startup script
RUN echo '#!/bin/sh\n\
echo "Starting Alumni Management System..."\n\
nginx -g "daemon off;" &\n\
cd /app && python3 src/app.py\n\
' > /app/start.sh && chmod +x /app/start.sh

# Expose port
EXPOSE 80

# Run the application
CMD ["/app/start.sh"]
